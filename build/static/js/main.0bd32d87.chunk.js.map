{"version":3,"sources":["components/MovieItem.jsx","api.js","components/MovieTabs.jsx","components/Pagination.jsx","components/GlobalStyles.jsx","components/ViewMovieLink.jsx","components/App.jsx","index.js"],"names":["Poster","styled","div","props","bgImage","Overview","MovieItem","state","willWatch","watchedMovies","watchingNowMovies","dropDownValue","text","this","setState","url","movie","id","window","open","removeMovie","removeMovieFromLists","addMovieToWillWatch","addMovieToWillWatchList","addMovieToWatchingNow","addMovieToWatchingNowList","addMovieToWatched","addMovieToWatchedMoviesList","removeMovieFromWatched","removeMovieFromWatchedMoviesList","removeMovieFromWatchingNow","removeMovieFromWatchingNowList","removeMovieFromWillWatch","removeMovieFromWillWatchList","Card","backdrop_path","poster_path","style","color","lineHeight","fontSize","overview","Body","Title","type","onClick","viewMovie","bind","title","Text","vote_average","className","margin","release_date","substring","DropdownButton","variant","Dropdown","Item","as","e","changeValue","target","textContent","React","Component","API_URL","API_KEY_3","MovieTabs","sort_by","updateSortBy","handleClick","value","getClassLink","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","NavDropdown","Pagination","onNextButtonClick","onPrevButtonClick","currentPage","totalPages","isPrevButtonDisabled","isNextButtonDisabled","aria-label","GlobalStyles","createGlobalStyle","ListBlock","ListTitle","p","ListItem","ViewMovieLink","moviesWillWatchList","watchedMoviesList","watchingNowList","moviesWillWatch","watchingNow","backgroundColor","length","App","getMovies","fetch","language","page","vote_count_gte","then","response","json","data","movies","results","updateMovies","filter","item","console","log","updateMoviesToWillWatch","push","updateMovieToWillWatchList","updateMoviesToWatched","updateMovieToWatchedMoviesList","updateMoviesToWatchingNow","updateMovieToWatchingNowList","prevProps","prevState","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bd32d87.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Poster = styled.div`\r\n  background: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 200px;\r\n  width: auto;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  height: 100%;\r\n  opacity: 0;\r\n  padding: 5px;\r\n  &:hover {\r\n    opacity: 1;\r\n    background: rgba(0, 0, 0, .5);\r\n  }\r\n`;\r\n\r\n\r\n\r\nclass MovieItem extends React.Component {\r\n\r\n    constructor () {\r\n        super()\r\n\r\n        this.state = {\r\n            willWatch: false,\r\n            watchedMovies: false,\r\n            watchingNowMovies: false,\r\n            dropDownValue: \"Статус\"\r\n        };\r\n\r\n    }\r\n\r\n    changeValue(text) {\r\n        this.setState({dropDownValue: text})\r\n      }\r\n\r\n      viewMovie() {\r\n        const url = \"https://www.themoviedb.org/movie/\" + this.props.movie.id;\r\n        window.open(url)\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n      const {movie,\r\n        removeMovie,\r\n        removeMovieFromLists,\r\n        addMovieToWillWatch,\r\n        addMovieToWillWatchList,\r\n        addMovieToWatchingNow,\r\n        addMovieToWatchingNowList,\r\n        addMovieToWatched,\r\n        addMovieToWatchedMoviesList,\r\n        removeMovieFromWatched,\r\n        removeMovieFromWatchedMoviesList,\r\n        removeMovieFromWatchingNow,\r\n        removeMovieFromWatchingNowList,\r\n        removeMovieFromWillWatch,\r\n        removeMovieFromWillWatchList,\r\n      } = this.props;\r\n\r\n\r\n\r\n\r\n      return (\r\n        <Card>\r\n\r\n          <Poster bgImage={`https://image.tmdb.org/t/p/w500${movie.backdrop_path || movie.poster_path}`}>\r\n            <Overview>\r\n              <p style={{color: 'white', lineHeight: 1.25, fontSize: 12 }}>{movie.overview}</p>\r\n            </Overview>\r\n          </Poster>\r\n          <Card.Body>\r\n              <Card.Title type=\"button\" style={{fontSize: 19 }} onClick={this.viewMovie.bind(this)}>{movie.title}</Card.Title>\r\n            <Card.Text>\r\n              <p>Rating: {movie.vote_average}</p>\r\n            </Card.Text>\r\n            <Card.Text className=\"row\">\r\n              <p className=\"col\" style={{margin: \"auto\"}} >{movie.release_date.substring(0, 4)}</p>\r\n              <div className=\"col\">\r\n                <DropdownButton  variant=\"outline-secondary\"  id=\"dropdown-item-button\" title={this.state.dropDownValue} className=\"format\">\r\n                  <Dropdown.Item as=\"button\">\r\n                    <div onClick={(e) => this.changeValue(e.target.textContent)}>\r\n                      {this.state.watchingNowMovies === true ? (\r\n                        <div  onClick={\r\n                          () => {\r\n                             this.setState({\r\n                                 watchingNowMovies: false,\r\n                             });\r\n                             removeMovieFromWatchingNow(movie);\r\n                             removeMovieFromWatchingNowList(movie);\r\n                           }}>\r\n                              Не смотрю\r\n                        </div>\r\n                      ) : (\r\n                        <div onClick={\r\n                          () => {\r\n                            this.setState({\r\n                              watchingNowMovies: true\r\n                            });\r\n                            addMovieToWatchingNow(movie);\r\n                            addMovieToWatchingNowList(movie);\r\n\r\n                          }}>\r\n                              Смотрю\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as=\"button\">\r\n                    <div onClick={(e) => this.changeValue(e.target.textContent)}>\r\n                      {this.state.willWatch === true ? (\r\n                        <div  onClick={\r\n                          () => {\r\n                            this.setState({\r\n                                willWatch: false\r\n                            });\r\n                            removeMovieFromWillWatch(movie);\r\n                            removeMovieFromWillWatchList(movie);\r\n\r\n                          }}>\r\n                              Перестал\r\n                        </div>\r\n                      ) : (\r\n                        <div onClick={\r\n                          () => {\r\n                            this.setState({\r\n                              willWatch: true\r\n                            });\r\n                            addMovieToWillWatch(movie);\r\n                            addMovieToWillWatchList(movie);\r\n                          }}>\r\n                              Буду смотреть\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as=\"button\">\r\n                    <div onClick={(e) => this.changeValue(e.target.textContent)}>\r\n                      {this.state.watchedMovies === true ? (\r\n                        <div onClick={\r\n                          () => {\r\n                            this.setState({\r\n                              watchedMovies: false,\r\n                            });\r\n                            removeMovieFromWatched(movie);\r\n                            removeMovieFromWatchedMoviesList(movie);\r\n                          }}>\r\n                              Не смотрел\r\n                        </div>\r\n                      ) : (\r\n                        <div onClick={\r\n                          () => {\r\n                            this.setState({\r\n                              watchedMovies: true\r\n                          });\r\n                          addMovieToWatched(movie);\r\n                          addMovieToWatchedMoviesList(movie);\r\n                          }}>\r\n                              Посмотрел\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as=\"button\">\r\n                    <div onClick={\r\n                      () => {\r\n                        removeMovie(movie);\r\n                        removeMovieFromLists(movie);\r\n                      }}>\r\n                        Удалить фильм\r\n                    </div>\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n              </div>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      );\r\n    }\r\n}\r\n\r\nexport default MovieItem;\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"4237669ebd35e8010beee2f55fd45546\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MjM3NjY5ZWJkMzVlODAxMGJlZWUyZjU1ZmQ0NTU0NiIsInN1YiI6IjVkMzc0NjVkZTU0ZDVkMjBhNGRiZDRlNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QkywZtcqMOTYX-fvvag8B-1DVXxaFEgVDumJkqV6oE0\";\r\n","import React from \"react\";\r\nimport { NavDropdown, Navbar } from 'react-bootstrap';\r\n\r\n\r\nclass MovieTabs extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        const {sort_by, updateSortBy} = this.props;\r\n        const handleClick = value => {\r\n            return () => {\r\n            updateSortBy(value);\r\n        };}\r\n        const getClassLink = value => {\r\n            return (`nav-link ${\r\n                sort_by === value ? \"active\" : \"\"\r\n            }`)\r\n        }\r\n\r\n        return (\r\n          <div>\r\n            <Navbar collapseOnSelect expand=\"lg\">\r\n              <Navbar.Brand href=\"/\" style={{fontSize: '23px'}}> Что посмотреть? </Navbar.Brand>\r\n                <Navbar.Toggle  aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\"  className=\"row\">\r\n              <NavDropdown  className=\"col-xl-2 col-lg-3\" title=\"По популярности\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item>\r\n                  <div  className={getClassLink(\"popularity.asc\")}\r\n                          onClick = {handleClick(\"popularity.asc\")}>\r\n                    По возрастанию\r\n                  </div>\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item className=\"nav-item\">\r\n                  <div  className={getClassLink(\"popularity.desc\")}\r\n                          onClick = {handleClick(\"popularity.desc\")}>\r\n                    По убыванию\r\n                  </div>\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n\r\n              <NavDropdown  className=\"col-xl-2 col-lg-3\" title=\"По рейтингу\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item>\r\n                    <div  className={getClassLink(\"vote_average.asc\")}\r\n                            onClick = {handleClick(\"vote_average.asc\")}>\r\n                      По возрастанию\r\n                    </div>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item className=\"nav-item\">\r\n                    <div  className={getClassLink(\"vote_average.desc\")}\r\n                            onClick = {handleClick(\"vote_average.desc\")}>\r\n                      По убыванию\r\n                    </div>\r\n                  </NavDropdown.Item>\r\n              </NavDropdown>\r\n\r\n              <NavDropdown  className=\"col-xl-2 col-lg-3\" title=\"По году выпуска\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item>\r\n                    <div  className={getClassLink(\"primary_release_date.asc\")}\r\n                          onClick = {handleClick(\"primary_release_date.asc\")}>\r\n                      По возрастанию\r\n                    </div>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item className=\"nav-item\">\r\n                    <div  className={getClassLink(\"primary_release_date.desc\")}\r\n                          onClick = {handleClick(\"primary_release_date.desc\")}>\r\n                      По убыванию\r\n                    </div>\r\n                  </NavDropdown.Item>\r\n              </NavDropdown>\r\n\r\n              <NavDropdown  className=\"col-xl-2 col-lg-3\" title=\"По алфавиту\" id=\"collasible-nav-dropdown\">\r\n                  <NavDropdown.Item>\r\n                    <div  className={getClassLink(\"original_title.asc\")}\r\n                          onClick = {handleClick(\"original_title.asc\")}>\r\n                      От А до Я\r\n                    </div>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item className=\"nav-item\">\r\n                    <div  className={getClassLink(\"original_title.desc\")}\r\n                          onClick = {handleClick(\"original_title.desc\")}>\r\n                      От Я до А\r\n                    </div>\r\n                  </NavDropdown.Item>\r\n              </NavDropdown>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default MovieTabs\r\n","import React from \"react\";\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  render() {\r\n    const {\r\n      onNextButtonClick,\r\n      onPrevButtonClick,\r\n      currentPage,\r\n      totalPages}\r\n    = this.props;\r\n\r\n    const isPrevButtonDisabled = currentPage === 1 ? 'disabled' : '';\r\n    const isNextButtonDisabled = currentPage === totalPages ? 'disabled' : '';\r\n\r\n\r\n    return (\r\n      <div>\r\n        <nav aria-label=\"Page navigation\" className=\"d-flex justify-content-center\">\r\n          <ul className=\"pagination\">\r\n              <li className={`page-item ${isPrevButtonDisabled}`}>\r\n                <span className=\"page-link\" onClick={onPrevButtonClick}>\r\n                  &lt;\r\n                </span>\r\n              </li>\r\n              <li className=\"mx-3 py-2\">\r\n                  <p>\r\n                    {currentPage} из {totalPages}\r\n                  </p>\r\n              </li>\r\n              <li className={`page-item ${isNextButtonDisabled}`}>\r\n                <span className=\"page-link\" onClick={onNextButtonClick}>\r\n                  &gt;\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Pagination;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n        font-family: 'Roboto', sans-serif;\r\n        font-size:15px;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n          margin: 0;\r\n    }\r\n    body{\r\n        font-family: 'Roboto', sans-serif;\r\n        padding-top:15px;\r\n    }\r\n    p{\r\n      margin: 0;\r\n    }\r\n\r\n\r\n`;\r\n\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListBlock = styled.div`\r\n  border-radius:5px;\r\n  border: 1px solid black;\r\n  margin-bottom:5px;\r\n  padding: 0 5px;\r\n\r\n`;\r\nconst ListTitle = styled.p`\r\n  display: block;\r\n  font-size: 17px;\r\n  font-weight: 500;\r\n  text-align: right;\r\n  margin: 0;\r\n  margin-bottom:7px;\r\n`;\r\nconst ListItem = styled.p`\r\n  display: block;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  text-align: right;\r\n  line-height:1.5;\r\n`;\r\n\r\n\r\n\r\nclass ViewMovieLink extends React.Component {\r\n\r\n    render() {\r\n      const {moviesWillWatchList,\r\n        watchedMoviesList,\r\n        watchingNowList,\r\n        moviesWillWatch,\r\n        watchedMovies,\r\n        watchingNow\r\n      } = this.props;\r\n\r\n\r\n      return (\r\n        <div  className=\"col\">\r\n          <ListBlock style={{backgroundColor:\"rgb(172, 236, 236, 0.3)\"}}>\r\n            <ListTitle>Буду смотреть: {moviesWillWatch.length} </ListTitle>\r\n            <ListItem>  {moviesWillWatchList}</ListItem>\r\n          </ListBlock>\r\n          <ListBlock style={{backgroundColor:\"rgb(255, 186, 186, .3)\"}}>\r\n            <ListTitle>Посмотрел: {watchedMovies.length}</ListTitle>\r\n            <ListItem> {watchedMoviesList}</ListItem>\r\n          </ListBlock>\r\n          <ListBlock style={{backgroundColor:\"rgb(229, 252, 183, .3)\"}}>\r\n            <ListTitle>Смотрю: {watchingNow.length}</ListTitle>\r\n            <ListItem> {watchingNowList}</ListItem>\r\n          </ListBlock>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ViewMovieLink;\r\n","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport {API_URL, API_KEY_3} from \"../api.js\";\nimport MovieTabs from \"./MovieTabs\";\nimport Pagination  from './Pagination';\nimport GlobalStyles  from './GlobalStyles';\nimport ViewMovieLink  from './ViewMovieLink';\n\n\n\n\nclass App extends React.Component {\n\n    constructor () {\n        super()\n\n        this.state = {\n            movies: [],\n            moviesWillWatch: [],\n            watchedMovies: [],\n            watchingNow: [],\n            sort_by: \"popularity.desc\",\n            language: \"ru-Ru\",\n            vote_count_gte: 100,\n            totalPages: 500,\n            currentPage: 1,\n            moviesWillWatchList: [],\n            watchedMoviesList : [],\n            watchingNowList: [],\n        };\n    }\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.sort_by !== this.state.sort_by) {\n            this.getMovies();\n        }\n\n    }\n\n\n    getMovies = () => {\n        fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&language=${this.state.language}&page=${this.state.page}&vote_count.gte=${this.state.vote_count_gte}`).then((response) => {\n            return response.json()\n        }).then((data) => {\n            this.setState({\n                movies: data.results\n            });\n        });\n    }\n\n    removeMovie = movie => {\n        const updateMovies =  this.state.movies.filter(function(item){\n            return item.id !== movie.id;\n        });\n        console.log(updateMovies);\n        this.setState({\n            movies : updateMovies\n        });\n    }\n\n\n    addMovieToWillWatch = movie => {\n        const updateMoviesToWillWatch = [...this.state.moviesWillWatch];\n        updateMoviesToWillWatch.push(movie);\n\n        this.setState({\n            moviesWillWatch : updateMoviesToWillWatch\n        });\n    };\n\n    addMovieToWillWatchList = movie => {\n        const updateMovieToWillWatchList = [...this.state.moviesWillWatchList];\n        updateMovieToWillWatchList.push(movie.title, <br />);\n\n        this.setState({\n            moviesWillWatchList : updateMovieToWillWatchList\n        });\n    };\n\n    removeMovieFromWillWatch = movie => {\n        const updateMoviesToWillWatch =  this.state.moviesWillWatch.filter(function(item){\n            return item.id !== movie.id;\n        });\n        this.setState({\n            moviesWillWatch: updateMoviesToWillWatch\n        });\n    };\n\n    removeMovieFromWillWatchList = movie => {\n      const updateMovieToWillWatchList =  this.state.moviesWillWatchList.filter(function(item){\n          return item.id === movie.id;\n      });\n\n        this.setState({\n            moviesWillWatchList: updateMovieToWillWatchList\n        });\n    };\n\n    addMovieToWatched = movie => {\n        const updateMoviesToWatched = [...this.state.watchedMovies];\n        updateMoviesToWatched.push(movie);\n\n        this.setState({\n            watchedMovies : updateMoviesToWatched\n        });\n    };\n\n    addMovieToWatchedMoviesList = movie => {\n        const updateMovieToWatchedMoviesList = [...this.state.watchedMoviesList];\n        updateMovieToWatchedMoviesList.push(movie.title, <br />);\n\n        this.setState({\n            watchedMoviesList : updateMovieToWatchedMoviesList\n        });\n    };\n\n    removeMovieFromWatched = movie => {\n        const updateMoviesToWatched =  this.state.watchedMovies.filter(function(item){\n            return item.id !== movie.id;\n        });\n        this.setState({\n            watchedMovies: updateMoviesToWatched\n        });\n    };\n\n    removeMovieFromWatchedMoviesList = movie => {\n        const updateMovieToWatchedMoviesList =  this.state.watchedMoviesList.filter(function(item){\n            return item.id === movie.id;\n        });\n        this.setState({\n            watchedMoviesList: updateMovieToWatchedMoviesList\n        });\n    };\n\n    addMovieToWatchingNow = movie => {\n        const updateMoviesToWatchingNow = [...this.state.watchingNow];\n        updateMoviesToWatchingNow.push(movie);\n\n        this.setState({\n            watchingNow : updateMoviesToWatchingNow\n        });\n    };\n\n    addMovieToWatchingNowList = movie => {\n        const updateMovieToWatchingNowList = [...this.state.watchingNowList];\n        updateMovieToWatchingNowList.push(movie.title, <br />);\n\n        this.setState({\n            watchingNowList : updateMovieToWatchingNowList\n        });\n    };\n\n    removeMovieFromWatchingNow = movie => {\n        const updateMoviesToWatchingNow =  this.state.watchingNow.filter(function(item){\n            return item.id !== movie.id;\n        });\n        this.setState({\n            watchingNow: updateMoviesToWatchingNow\n        });\n    };\n\n    removeMovieFromWatchingNowList = movie => {\n        const updateMovieToWatchingNowList =  this.state.watchingNowList.filter(function(item){\n            return item.id === movie.id;\n        });\n        this.setState({\n            watchingNowList: updateMovieToWatchingNowList\n        });\n    };\n\n    removeMovieFromLists = movie => {\n      return (\n        this.removeMovieFromWillWatch(movie),\n        this.removeMovieFromWatched(movie),\n        this.removeMovieFromWatchingNow(movie),\n        this.removeMovieFromWillWatchList(movie),\n        this.removeMovieFromWatchingNowList(movie),\n        this.removeMovieFromWatchedMoviesList(movie)\n      )\n    }\n\n\n    updateSortBy = value => {\n        this.setState({\n            sort_by: value\n        })\n    }\n\n\n    onNextButtonClick = value => {\n      if (this.state.currentPage === this.state.totalPages) {\n        return false;\n      } fetch(\n        `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&language=${this.state.language}&vote_count.gte=${this.state.vote_count_gte}&page=${this.state.currentPage+1}`)\n        .then(response => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({\n            movies: data.results,\n            currentPage: data.page,\n          });\n        });\n    };\n\n    onPrevButtonClick = value => {\n      if (this.state.currentPage === 1) {\n        return false;\n      } fetch(\n        `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&language=${this.state.language}&vote_count.gte=${this.state.vote_count_gte}&page=${this.state.currentPage-1}`)\n          .then(response => {\n            return response.json();\n          })\n          .then((data) => {\n            this.setState({\n              movies: data.results,\n              currentPage: data.page,\n            });\n          });\n    };\n\n\n\n\n    render () {\n        return (\n          <>\n            <div className=\"container\">\n                      <div className=\"row my-3\">\n                        <div className=\"col-12\">\n                          <MovieTabs\n                            sort_by={this.state.sort_by}\n                            updateSortBy ={this.updateSortBy}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div  className=\"col-lg-9 col-md-12\">\n                        <div className=\"row\">\n                        {this.state.movies.map(movie => {\n                              return (\n                                <div className=\"col-lg-4 col-md-6 col-sm-12 mb-4\" key={movie.id} >\n                                  <MovieItem\n                                    movie={movie}\n                                    removeMovie={this.removeMovie}\n                                    removeMovieFromLists={this.removeMovieFromLists}\n                                    removeMovieFromWillWatchList={this.removeMovieFromWillWatchList}\n                                    removeMovieFromWatchedMoviesList={this.removeMovieFromWatchedMoviesList}\n                                    removeMovieFromWatchingNowList={this.removeMovieFromWatchingNowList}\n                                    addMovieToWatched={this.addMovieToWatched}\n                                    addMovieToWatchedMoviesList={this.addMovieToWatchedMoviesList}\n                                    removeMovieFromWatched={this.removeMovieFromWatched}\n                                    addMovieToWatchingNow={this.addMovieToWatchingNow}\n                                    addMovieToWatchingNowList={this.addMovieToWatchingNowList}\n                                    removeMovieFromWatchingNow={this.removeMovieFromWatchingNow}\n                                    addMovieToWillWatch={this.addMovieToWillWatch}\n                                    addMovieToWillWatchList={this.addMovieToWillWatchList}\n                                    removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                                  />\n                                </div>\n                              )\n                        })}\n                        </div>\n                        </div>\n                          <ViewMovieLink\n                          moviesWillWatchList={this.state.moviesWillWatchList}\n                          watchedMoviesList={this.state.watchedMoviesList}\n                          watchingNowList={this.state.watchingNowList}\n                          watchedMovies={this.state.watchedMovies}\n                          moviesWillWatch={this.state.moviesWillWatch}\n                          watchingNow={this.state.watchingNow}\n                           />\n                      </div>\n                <div className=\"row my-4\">\n                  <div className=\"col-12\" >\n                    <Pagination\n                      onNextButtonClick={this.onNextButtonClick}\n                      onPrevButtonClick={this.onPrevButtonClick}\n                      totalPages={this.state.totalPages}\n                      currentPage={this.state.currentPage}\n                    />\n                  </div>\n                </div>\n            </div>\n        <GlobalStyles />\n      </>\n\n    );\n  }\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\nimport \"./bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}